.\" Automatically generated by Pandoc 2.18
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "emd (1)" "" "" "" ""
.hy
.SH NAME
.PP
emd - [Emily] Dickinson
.SH DESCRIPTION
.PP
\f[B]Dickinson\f[R] is a text-generation language
.SH SYNOPSIS
.PP
emd fortune.dck
.PP
emd repl
.PP
emd run literature.dck
.PP
emd run project.dck --include lib
.PP
man $(emd man)
.SS SHEBANG
.PP
Dickinson ignores lines starting with \f[V]#!\f[R] so we can put
.IP
.nf
\f[C]
#!/usr/bin/env emd
\f[R]
.fi
.PP
at the top of a file and \f[V]emd\f[R] will be used as an interpreter.
.SH SUBCOMMANDS
.PP
\f[B]repl\f[R] - Start a repl
.PP
\f[B]run\f[R] - Run a file
.PP
\f[B]check\f[R] - Check that a program is correct without running it
.PP
\f[B]lint\f[R] - Give suggestions for common mistakes
.PP
\f[B]fmt\f[R] - Format Dickinson code
.PP
\f[B]man\f[R] - Point to where manpages are installed
.SS REPL COMMANDS
.PP
\f[B]:save\f[R] - Save curent state in a file
.PP
\f[B]:l\f[R] \f[B]:load\f[R] - Load a file
.PP
\f[B]:r\f[R] - Restore a REPL state stored in a file
.PP
\f[B]:q\f[R] \f[B]:quit\f[R] - Quit session
.PP
\f[B]:list\f[R] - List all names that are in scope
.PP
\f[B]:t\f[R] \f[B]:type\f[R] - Display the type of an expression
.PP
\f[B]:v\f[R] \f[B]:view\f[R] - Show the definition of a name
.PP
\f[B]:h\f[R] \f[B]:help\f[R] - Display help
.SH OPTIONS
.TP
\f[B]-h\f[R] \f[B]--help\f[R]
Display help
.TP
\f[B]-V\f[R] \f[B]--version\f[R]
Display version information
.TP
\f[B]-I\f[R] \f[B]--include\f[R]
Directory to search for libraries
.SH INFLUENTIAL ENVIRONMENT VARIABLES
.PP
\f[V]DCK_PATH\f[R] - a colon-separated list of directories to search
.SH EDITOR INTEGRATION
.PP
A vim plugin is available; see
.PP
https://github.com/vmchale/dickinson/tree/master/vim
.SS CTAGS
.PP
To configure exuberant ctags or universal ctags, put
.IP
.nf
\f[C]
--langdef=DICKINSON
--langmap=DICKINSON:.dck
--regex-DICKINSON=/:def *([[:lower:]][[:alnum:]]+)/\[rs]1/f,function/
--regex-DICKINSON=/tydecl *([[:lower:]][[:alnum:]]+) *=/\[rs]1/t,type/
\f[R]
.fi
.PP
in the project .ctags
.SH SHELL COMPLETIONS
.PP
To get shell completions in your current session:
.IP
.nf
\f[C]
eval \[dq]$(emd --bash-completion-script emd)\[dq]
\f[R]
.fi
.PP
Put this in your \f[V]\[ti]/.bashrc\f[R] or
\f[V]\[ti]/.bash_profile\f[R] to install them.
.PP
Shell completions are also available for fish and zsh; to get them:
.PP
\f[V]emd --fish-completion-script emd\f[R]
.PP
\f[V]emd --zsh-completion-script emd\f[R]
.SH BUGS
.PP
Please report any bugs you may come across to
https://github.com/vmchale/dickinson/issues.
.SH COPYRIGHT
.PP
Copyright 2020.
Vanessa McHale.
All Rights Reserved.
.SH AUTHORS
Vanessa McHale<vamchale@gmail.com>.
