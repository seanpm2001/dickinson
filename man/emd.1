.\" Automatically generated by Pandoc 3.2
.\"
.TH "emd (1)" "" "" "" ""
.SH NAME
emd \- [Emily] Dickinson
.SH DESCRIPTION
\f[B]Dickinson\f[R] is a text\-generation language
.SH SYNOPSIS
emd fortune.dck
.PP
emd repl
.PP
emd run literature.dck
.PP
emd run project.dck \-\-include lib
.PP
man $(emd man)
.SS SHEBANG
Dickinson ignores lines starting with \f[CR]#!\f[R] so we can put
.IP
.EX
#!/usr/bin/env emd
.EE
.PP
at the top of a file and \f[CR]emd\f[R] will be used as an interpreter.
.SH SUBCOMMANDS
\f[B]repl\f[R] \- Start a repl
.PP
\f[B]run\f[R] \- Run a file
.PP
\f[B]check\f[R] \- Check that a program is correct without running it
.PP
\f[B]lint\f[R] \- Give suggestions for common mistakes
.PP
\f[B]fmt\f[R] \- Format Dickinson code
.PP
\f[B]man\f[R] \- Point to where manpages are installed
.SS REPL COMMANDS
\f[B]:save\f[R] \- Save curent state in a file
.PP
\f[B]:l\f[R] \f[B]:load\f[R] \- Load a file
.PP
\f[B]:r\f[R] \- Restore a REPL state stored in a file
.PP
\f[B]:q\f[R] \f[B]:quit\f[R] \- Quit session
.PP
\f[B]:list\f[R] \- List all names that are in scope
.PP
\f[B]:t\f[R] \f[B]:type\f[R] \- Display the type of an expression
.PP
\f[B]:v\f[R] \f[B]:view\f[R] \- Show the definition of a name
.PP
\f[B]:h\f[R] \f[B]:help\f[R] \- Display help
.SH OPTIONS
.TP
\f[B]\-h\f[R] \f[B]\-\-help\f[R]
Display help
.TP
\f[B]\-V\f[R] \f[B]\-\-version\f[R]
Display version information
.TP
\f[B]\-I\f[R] \f[B]\-\-include\f[R]
Directory to search for libraries
.SH INFLUENTIAL ENVIRONMENT VARIABLES
\f[CR]DCK_PATH\f[R] \- a colon\-separated list of directories to search
.SH EDITOR INTEGRATION
A vim plugin is available; see
.PP
https://github.com/vmchale/dickinson/tree/master/vim
.SS CTAGS
To configure universal ctags, put
.IP
.EX
\-\-langdef=DICKINSON
\-\-langmap=DICKINSON:.dck
\-\-regex\-DICKINSON=/:def *([[:lower:]][[:alnum:]]+)/\[rs]1/f,function/
\-\-regex\-DICKINSON=/tydecl *([[:lower:]][[:alnum:]]+) *=/\[rs]1/t,type/
\-\-regex\-DICKINSON=/= *([[:upper:]][[:alnum:]_]+)/\[rs]1/t,type/
\-\-regex\-DICKINSON=/\[ha][\[ha]\[rs][]*\[rs]| *([[:upper:]][[:alnum:]_]+)/\[rs]1/t,type/
.EE
.PP
in \[ti]/.ctags.d/dickinson.ctags
.SH SHELL COMPLETIONS
To get shell completions in your current session:
.IP
.EX
eval \[dq]$(emd \-\-bash\-completion\-script emd)\[dq]
.EE
.PP
Put this in your \f[CR]\[ti]/.bashrc\f[R] or
\f[CR]\[ti]/.bash_profile\f[R] to install them.
.PP
Shell completions are also available for fish and zsh; to get them:
.PP
\f[CR]emd \-\-fish\-completion\-script emd\f[R]
.PP
\f[CR]emd \-\-zsh\-completion\-script emd\f[R]
.SH BUGS
Please report any bugs you may come across to
https://github.com/vmchale/dickinson/issues.
.SH COPYRIGHT
Copyright 2020.
Vanessa McHale.
All Rights Reserved.
.SH AUTHORS
Vanessa McHale\c
.MT vamchale@gmail.com
.ME \c.
